/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newUser",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialHealthRecord",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialDistrictAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "initialAuthorizationLevel",
        type: "uint8",
      },
    ],
    name: "addUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedDistricts",
    outputs: [
      {
        internalType: "address",
        name: "districtAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "authorizationLevel",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "districtId",
        type: "uint256",
      },
    ],
    name: "canModify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "districtId",
        type: "uint256",
      },
    ],
    name: "getAuthorizationLevelByUserAddress",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "districtId",
        type: "uint256",
      },
    ],
    name: "getDistrictAdressByUserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "newRecord",
        type: "string",
      },
    ],
    name: "modifyUserHealthRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userHealthRecords",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000dc7370997970c51812dc3a010c7d01b50e0d17dc79c86040518060400160405280601381526020017f68656c6c6f206865616c7468207265636f72640000000000000000000000000081525073b91bc2a105c03667930b5ebe639e7914c5763bdb6064620000e260201b60201c565b62000683565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016890620004f3565b60405180910390fd5b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014620001f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ef9062000565565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546200024690620005b6565b9050146200028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002829062000661565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018360ff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff160217905550505082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190620003db929190620003e2565b5050505050565b828054620003f090620005b6565b90600052602060002090601f01602090048101928262000414576000855562000460565b82601f106200042f57805160ff191683800117855562000460565b8280016001018555821562000460579182015b828111156200045f57825182559160200191906001019062000442565b5b5090506200046f919062000473565b5090565b5b808211156200048e57600081600090555060010162000474565b5090565b600082825260208201905092915050565b7f4e6f742077686974656c69737465640000000000000000000000000000000000600082015250565b6000620004db600f8362000492565b9150620004e882620004a3565b602082019050919050565b600060208201905081810360008301526200050e81620004cc565b9050919050565b7f5573657220616c726561647920616464656420746f206469737472696374732e600082015250565b60006200054d60208362000492565b91506200055a8262000515565b602082019050919050565b6000602082019050818103600083015262000580816200053e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005cf57607f821691505b602082108103620005e557620005e462000587565b5b50919050565b7f5573657220616c7265616479206861732061206865616c7468207265636f726460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006200064960218362000492565b91506200065682620005eb565b604082019050919050565b600060208201905081810360008301526200067c816200063a565b9050919050565b61148280620006936000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063dd45ef3811610066578063dd45ef381461016c578063e2b95b2e14610188578063e43252d7146101b8578063e744f40c146101d4578063ed4cc6f5146102045761009e565b80630e267317146100a357806380cdb604146100bf5780638ab1d681146100ef5780639b19251a1461010b578063ad2b28d21461013b575b600080fd5b6100bd60048036038101906100b89190610ee2565b610234565b005b6100d960048036038101906100d49190610f9b565b610527565b6040516100e69190610fea565b60405180910390f35b61010960048036038101906101049190611005565b610657565b005b61012560048036038101906101209190611005565b61073e565b604051610132919061104d565b60405180910390f35b61015560048036038101906101509190610f9b565b61075e565b604051610163929190611077565b60405180910390f35b610186600480360381019061018191906110a0565b6107c8565b005b6101a2600480360381019061019d9190611005565b610820565b6040516101af9190611184565b60405180910390f35b6101d260048036038101906101cd9190611005565b6108c0565b005b6101ee60048036038101906101e99190610f9b565b6109a7565b6040516101fb91906111a6565b60405180910390f35b61021e60048036038101906102199190610f9b565b610ad7565b60405161022b919061104d565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b79061120d565b60405180910390fd5b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90611279565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610390906112c8565b9050146103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c99061136b565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018360ff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff160217905550505082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610520929190610c4e565b5050505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610629578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff168152505081526020019060010190610588565b5050505090508083815181106106425761064161138b565b5b60200260200101516020015191505092915050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da9061120d565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b6000602052816000526040600020818154811061077a57600080fd5b90600052602060002001600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061081b929190610c4e565b505050565b6001602052806000526040600020600091509050805461083f906112c8565b80601f016020809104026020016040519081016040528092919081815260200182805461086b906112c8565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b505050505081565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661094c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109439061120d565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610aa9578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff168152505081526020019060010190610a08565b505050509050808381518110610ac257610ac161138b565b5b60200260200101516000015191505092915050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610bd9578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff168152505081526020019060010190610b38565b5050505090506064818481518110610bf457610bf361138b565b5b60200260200101516020015160ff1614610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a9061142c565b60405180910390fd5b600191505092915050565b828054610c5a906112c8565b90600052602060002090601f016020900481019282610c7c5760008555610cc3565b82601f10610c9557805160ff1916838001178555610cc3565b82800160010185558215610cc3579182015b82811115610cc2578251825591602001919060010190610ca7565b5b509050610cd09190610cd4565b5090565b5b80821115610ced576000816000905550600101610cd5565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3082610d05565b9050919050565b610d4081610d25565b8114610d4b57600080fd5b50565b600081359050610d5d81610d37565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610db682610d6d565b810181811067ffffffffffffffff82111715610dd557610dd4610d7e565b5b80604052505050565b6000610de8610cf1565b9050610df48282610dad565b919050565b600067ffffffffffffffff821115610e1457610e13610d7e565b5b610e1d82610d6d565b9050602081019050919050565b82818337600083830152505050565b6000610e4c610e4784610df9565b610dde565b905082815260208101848484011115610e6857610e67610d68565b5b610e73848285610e2a565b509392505050565b600082601f830112610e9057610e8f610d63565b5b8135610ea0848260208601610e39565b91505092915050565b600060ff82169050919050565b610ebf81610ea9565b8114610eca57600080fd5b50565b600081359050610edc81610eb6565b92915050565b60008060008060808587031215610efc57610efb610cfb565b5b6000610f0a87828801610d4e565b945050602085013567ffffffffffffffff811115610f2b57610f2a610d00565b5b610f3787828801610e7b565b9350506040610f4887828801610d4e565b9250506060610f5987828801610ecd565b91505092959194509250565b6000819050919050565b610f7881610f65565b8114610f8357600080fd5b50565b600081359050610f9581610f6f565b92915050565b60008060408385031215610fb257610fb1610cfb565b5b6000610fc085828601610d4e565b9250506020610fd185828601610f86565b9150509250929050565b610fe481610ea9565b82525050565b6000602082019050610fff6000830184610fdb565b92915050565b60006020828403121561101b5761101a610cfb565b5b600061102984828501610d4e565b91505092915050565b60008115159050919050565b61104781611032565b82525050565b6000602082019050611062600083018461103e565b92915050565b61107181610d25565b82525050565b600060408201905061108c6000830185611068565b6110996020830184610fdb565b9392505050565b600080604083850312156110b7576110b6610cfb565b5b60006110c585828601610d4e565b925050602083013567ffffffffffffffff8111156110e6576110e5610d00565b5b6110f285828601610e7b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561113657808201518184015260208101905061111b565b83811115611145576000848401525b50505050565b6000611156826110fc565b6111608185611107565b9350611170818560208601611118565b61117981610d6d565b840191505092915050565b6000602082019050818103600083015261119e818461114b565b905092915050565b60006020820190506111bb6000830184611068565b92915050565b7f4e6f742077686974656c69737465640000000000000000000000000000000000600082015250565b60006111f7600f83611107565b9150611202826111c1565b602082019050919050565b60006020820190508181036000830152611226816111ea565b9050919050565b7f5573657220616c726561647920616464656420746f206469737472696374732e600082015250565b6000611263602083611107565b915061126e8261122d565b602082019050919050565b6000602082019050818103600083015261129281611256565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112e057607f821691505b6020821081036112f3576112f2611299565b5b50919050565b7f5573657220616c7265616479206861732061206865616c7468207265636f726460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611355602183611107565b9150611360826112f9565b604082019050919050565b6000602082019050818103600083015261138481611348565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5468652063616c6c657220646f6573206e6f742068617665207065726d69737360008201527f696f6e20746f206d6f646966792e000000000000000000000000000000000000602082015250565b6000611416602e83611107565b9150611421826113ba565b604082019050919050565b6000602082019050818103600083015261144581611409565b905091905056fea2646970667358221220bad5bb164bc5a21b7dffc712a507422ac51433757765f669f828ad0b7665343664736f6c634300080d0033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YourContract> {
    return super.deploy(overrides || {}) as Promise<YourContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  override connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
